@charset "UTF-8";
@use "variables" as variables;

/*h2タグのスタイル*/
@mixin Heading2Style {
	font-family: 'Noto Sans JP', sans-serif;
	font-size: 11.538461538vw;
	font-weight: bold;
	color: variables.$officalAKBColor;
	text-align: center;
	margin-bottom: 9.61538461538vw;
}

/*h3タグのスタイル*/
@mixin Heading3Style {
	font-family: 'Noto Sans JP', sans-serif;
	font-size: 6.346153846vw;
	font-weight: bold;
	color: variables.$officalAKBColor;
	text-align: center;
	margin-bottom: 50px;
}

/*hover、action時アイコンの不透明度を変える処理*/
@mixin changeOpacityIcon {
	transition: all 0.3s;
	// hover指定できるデバイス(PCなど)の場合
	@media (hover: hover) {
		&:hover {
			opacity: 0.8;
		}
	}

	// hover指定できないデバイス(スマホ・タブレットなど)の場合
	@media (hover: none) {
		&:active {
			opacity: 0.8;
		}
	}
}

/*hover、action時、headerの各アイコンの不透明度を変える処理*/
@mixin changeOpacityHeaderIcon {
	transition: all 0.3s;
	// hover指定できるデバイス(PCなど)の場合
	@media (hover: hover) {
		&:hover {
			opacity: 0.7;
		}
	}

	// hover指定できないデバイス(スマホ・タブレットなど)の場合
	@media (hover: none) {
		&:active {
			opacity: 0.7;
		}
	}
}

/*topページのボタンのスタイル*/
@mixin topBtnStyle {
	// ボタン共通設定
	font-family: 'Noto Sans JP', sans-serif;
	color: variables.$bgColor;
	background-color: #979797;
	text-align:center;
	padding: 3px 15px;
	font-size: 16px;
	border-radius: 10px;
	text-decoration: none;
	display: inline-block;
	// 矢印の基点とするためrelativeを指定
	position: relative;
	// アニメーションの指定
	transition: all .2s ease;
	@include changeOpacityIcon;					/*hover時にopacityを変更する処理*/
}

/*topページのボタンの"矢印"のスタイル*/
@mixin topBtnArrowStyle{
	&::before {
	content: "";
	// 絶対配置で矢印の位置を決める
	position: absolute;
	top: 50%;
	right: 18px;
	// 矢印の形状(平行線の部分)
	width: 12px;
	height: 1px;
	background-color: #FFFEFE;
	// アニメーションの指定
	transition: all .2s ease;
	}

	&::after {
		content: "";
		// 絶対配置で矢印の位置を決める
		position: absolute;
		top: 44%;
		right: 18px;
		// 矢印の形状(くの字の部分)
		width: 5px;
		height: 5px;
		border-top: 1px solid #FFFEFE;			/*上辺*/
		border-right: 1px solid #FFFEFE;		/*右辺*/
		transform: rotate(45deg);				/*時計回りに45度回転する*/
		// アニメーションの指定
		transition: all .2s ease;
	}


	// hover指定できるデバイス(PCなど)の場合
	@media (hover: hover) {
		&:hover::before {
			right: 10px;
			opacity: 0.8;
		}
	
		&:hover::after {
			right: 10px;
			opacity: 0.8;
		}
	}

	// hover指定できないデバイス(スマホ・タブレットなど)の場合
	@media (hover: none) {
		&:active::before {
			right: 10px;
			opacity: 0.8;
		}
	
		&:active::after {
			right: 10px;
			opacity: 0.8;
		}
	}
}

/*hover、action時アイコンが拡大する処理*/
@mixin zoomIcon {
	transition: all 0.3s;
	// hover指定できるデバイス(PCなど)の場合
	@media (hover: hover) {
		&:hover {
			transform: scale(1.25);
		}
	}

	// hover指定できないデバイス(スマホ・タブレットなど)の場合
	@media (hover: none) {
		&:active {
			transform: scale(1.25);
		}
	}
}

/*topページのブログ一覧のタイトルのフォントサイズ*/
// 計算式：font-size: calc(X + ((1vw – Y)*Z));
// X：文字サイズに指定したい最小値
// Y：最小値を適用したい画面幅の1%
// Z：（最大値を適用したい画面幅の1% – 最小値を適用したい画面幅の1%）× ◯ = 文字サイズの最大値と最小値の差
//	   →(959px * 1% - 520px * 1%) * 〇 = 20px - 16px
@mixin topBlogTitleSize {
	font-size: calc(16px + (1vw - (5.2px)) * 0.911);
}

/*各メンバーの色指定*/
@mixin memberColor {
	.yu_color {
		color: variables.$yuiriColor;
	}

	.na_color {
		color: variables.$nanaColor;
	}

	.mogi_color {
		color: variables.$mogiColor;
	}

	.onn_color {
		color: variables.$mionColor;
	}
}